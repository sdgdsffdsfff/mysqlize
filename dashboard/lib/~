class MySQLParser
  
  @raw_input = Array.new
  @columns
  @format 
  @result
  @formats = ['grid', 'tab', 'vertical']

  def initialize(input, format=nil, column_names=nil)
    @raw_input = []
    input.each_line do |line|
      @raw_input.push(line.chomp!)
    end

    if @raw_input.empty?
      exit
    end

    @format = find_format
    if !@formats.include?(@format)
      puts "empty"
    end

  end

  def find_format
    first_found = nil
    @raw_input.each_with_index do |line, idx|
      if idx == 0
        if line.start_with?('+') and line.end_with?('+')
          first_found = 'grid'
        elsif line.start_with?('*') and line.end_with?('*')
          first_found = 'vertical'
        end
      elsif idx == @raw_input.length - 1
        if first_found == 'grid' and line.start_with?('+') and line.end_with?('+')
          return 'grid'
        end
      end
    end
  end

  def find_column_name
  end
end

file = File.open(ARGV[0], 'r')
input =  file.read
parser = MySQLParser.new(input)
